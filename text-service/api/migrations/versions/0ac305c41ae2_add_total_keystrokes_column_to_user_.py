"""Add total_keystrokes column to user_stats_sessions

Revision ID: 0ac305c41ae2
Revises: 
Create Date: 2025-07-06 11:30:58.265589

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0ac305c41ae2'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unigraphs')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_index(op.f('ix_users_first_name'), table_name='users')
    op.drop_index(op.f('ix_users_last_name'), table_name='users')
    op.drop_index(op.f('ix_users_user_name'), table_name='users')
    op.drop_table('digraphs')
    op.drop_table('user_stats_sessions')
    op.drop_table('user_stats_summaries')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_stats_summaries',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('total_sessions', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_practice_duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('average_wpm', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('average_accuracy', sa.NUMERIC(precision=5, scale=2), autoincrement=False, nullable=False),
    sa.Column('fastest_wpm', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('longest_streak', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('total_corrected_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_deleted_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_keystrokes', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('error_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_stats_summaries_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_stats_summaries_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('user_stats_sessions',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('wpm', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True),
    sa.Column('practice_duration', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('start_time', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('corrected_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('deleted_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('typed_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('total_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('error_char_count', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_stats_sessions_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_stats_sessions_pkey'))
    )
    op.create_table('digraphs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_stats_summary_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('key', sa.VARCHAR(length=2), autoincrement=False, nullable=False),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('mean_interval', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_stats_summary_id'], ['user_stats_summaries.id'], name=op.f('digraphs_user_stats_summary_id_fkey')),
    sa.PrimaryKeyConstraint('user_stats_summary_id', 'key', name=op.f('digraphs_pkey'))
    )
    op.create_table('users',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_users_user_name'), 'users', ['user_name'], unique=False)
    op.create_index(op.f('ix_users_last_name'), 'users', ['last_name'], unique=False)
    op.create_index(op.f('ix_users_first_name'), 'users', ['first_name'], unique=False)
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('unigraphs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_stats_summary_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('key', sa.VARCHAR(length=1), autoincrement=False, nullable=False),
    sa.Column('count', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('accuracy', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False),
    sa.Column('mistyped', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_stats_summary_id'], ['user_stats_summaries.id'], name=op.f('unigraphs_user_stats_summary_id_fkey')),
    sa.PrimaryKeyConstraint('user_stats_summary_id', 'key', name=op.f('unigraphs_pkey'))
    )
    # ### end Alembic commands ###
