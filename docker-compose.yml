services:
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    volumes:
      - ./client:/app
    env_file:
      - .env.development
    networks:
      - app-network
    ports:
      - "5173:5173"

  text-api:
    build:
      context: ./text-service/api
      dockerfile: Dockerfile.dev
    volumes:
      - ./text-service/api:/app
    env_file:
      - .env.development
    networks:
      - app-network
    ports:
      - "5000:5000"

networks:
  app-network:
    driver: bridge
# services:
#   postgres:
#     image: postgres:17-alpine
#     environment:
#       POSTGRES_USER: youruser
#       POSTGRES_PASSWORD: yourpassword
#       POSTGRES_DB: yourdb
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#     networks:
#       - app-network

#   text-api:
#     build: ./text-api
#     command: uvicorn main:app --host 0.0.0.0 --port 5000 --reload  # <-- reload/watch enabled
#     volumes:
#       - ./text-api:/app  # mount code for live reload
#     depends_on:
#       - postgres
#     environment:
#       DATABASE_URL: postgres://youruser:yourpassword@postgres:5432/yourdb
#     networks:
#       - app-network
#     ports:
#       - "5000:5000"

#   client:
#     build: ./client
#     volumes:
#       - ./client:/usr/share/nginx/html  # or your frontend dev folder
#     networks:
#       - app-network
#     ports:
#       - "80:80"

#   loadbalancer:
#     image: nginx:latest
#     volumes:
#       - ./loadbalancer/nginx.conf:/etc/nginx/nginx.conf:ro
#     ports:
#       - "8080:80"
#     depends_on:
#       - client
#       - text-api
#     networks:
#       - app-network

# volumes:
#   postgres-data:

# networks:
#   app-network:
#     driver: bridge
